x-common-env: &common-env
  SPRING_RABBITMQ_HOST: ecomm-rabbitmq
  SPRING_RABBITMQ_PORT: 5672
  SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-guest}
  SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
  MANAGEMENT_OTLP_TRACING_ENDPOINT: http://ecomm-tempo:4317

x-config-id: &config-id
  SPRING_CLOUD_CONFIG_DISCOVERY_ENABLED: true
  SPRING_CLOUD_CONFIG_DISCOVERY_SERVICEID: ecomm-config-server
  
x-config-retry: &config-retry
  SPRING_CLOUD_CONFIG_FAILFAST: true
  SPRING_CLOUD_CONFIG_RETRY_MAXATTEMPTS: 10
  
x-eureka: &eureka
  EUREKA_SERVER: http://ecomm-service-registry:8082/eureka/

x-redis: &redis
  SPRING_DATA_REDIS_HOST: ecomm-redis
  SPRING_DATA_REDIS_PORT: 6379

x-jwt: &jwt
  SECRET_KEY: ${SECRET_KEY:-gEn3r8EdK3y} # Generate key in Account Management TokenService class

x-common-config: &common-config
  restart: unless-stopped
  networks: 
    - ecomm-net
  labels:
    logging: "promtail"
    
x-health-chk: &health-chk
  healthcheck:
    test: ["CMD-SHELL", "curl --fail --silent http://localhost:$${SERVER_PORT}/actuator/health | grep UP || exit 1"]
    interval: 20s
    timeout: 10s
    retries: 10
    start_period: 1m

services:
  api-gateway:
    image: ${DOCKER_USERNAME}/ecomm-api-gateway
    container_name: ecomm-api-gateway
    ports:
      - "18080:18080"
      - "8080:8080"
    environment:
      <<: [*common-env, *config-id, *config-retry, *eureka, *redis, *jwt]
      MANAGEMENT_SERVER_PORT: 18080
      SERVER_PORT: 8080
      SPRING_CLOUD_CONFIG_NAME: ecomm-api-gateway,monitoring
    depends_on:
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent http://localhost:$${MANAGEMENT_SERVER_PORT}/actuator/health | grep UP || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 1m
    <<: *common-config

  config-server:
    image: ${DOCKER_USERNAME}/ecomm-config-server
    container_name: ecomm-config-server
    ports: 
      - "8081:8081"
    environment:
      <<: [*common-env, *eureka]
      SERVER_PORT: 8081
      GIT_URI: ${GIT_URI}
      GIT_USERNAME: ${GIT_USERNAME}
      GIT_PASSWORD: ${GIT_PASSWORD}
    <<: [*common-config, *health-chk]

  service-registry:
    image: ${DOCKER_USERNAME}/ecomm-service-registry
    container_name: ecomm-service-registry
    ports: 
      - "8082:8082"
    environment:
      <<: [*common-env, *config-retry]
      SERVER_PORT: 8082
      SPRING_CLOUD_CONFIG_URI: http://ecomm-config-server:8081
    depends_on:
      config-server:
        condition: service_healthy      
    <<: [*common-config, *health-chk]

  account-management:
    image: ${DOCKER_USERNAME}/ecomm-account-management
    container_name: ecomm-account-management
    ports: 
      - "8083:8083"
    environment:
      <<: [*common-env, *config-id, *config-retry, *eureka, *jwt]
      SERVER_PORT: 8083
      SPRING_CLOUD_CONFIG_NAME: database,monitoring
      SPRING_DATASOURCE_URL: jdbc:postgresql://account-postgres:5432/users_db
    depends_on:
      api-gateway:
        condition: service_healthy
      account-postgres:
        condition: service_healthy
    <<: [*common-config, *health-chk]

  product-catalog:
    image: ${DOCKER_USERNAME}/ecomm-product-catalog
    container_name: ecomm-product-catalog
    ports: 
      - "8084:8084"
    environment:
      <<: [*common-env, *config-id, *config-retry, *eureka, *redis]
      SERVER_PORT: 8084
      SPRING_CLOUD_CONFIG_NAME: database,monitoring
      SPRING_DATASOURCE_URL: jdbc:postgresql://product-postgres:5432/products_db
    depends_on:
      api-gateway:
        condition: service_healthy
      product-postgres:
        condition: service_healthy
    <<: [*common-config, *health-chk]